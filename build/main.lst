                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.0.4 #11952 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module main
                                      6 	.optsdcc -mgbz80
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _main
                                     12 	.globl _set_sprite_data
                                     13 	.globl _set_bkg_tiles
                                     14 	.globl _set_bkg_data
                                     15 	.globl _wait_vbl_done
                                     16 	.globl _joypad
                                     17 	.globl _rand
                                     18 	.globl _initrand
                                     19 	.globl _randomBkgTiles
                                     20 	.globl _lastKeys
                                     21 	.globl _eY
                                     22 	.globl _eX
                                     23 	.globl _playerY
                                     24 	.globl _playerX
                                     25 	.globl _j
                                     26 	.globl _i
                                     27 	.globl _myBkgData
                                     28 	.globl _sprites
                                     29 	.globl _initGame
                                     30 	.globl _updatePlayer
                                     31 	.globl _collisionCheck
                                     32 ;--------------------------------------------------------
                                     33 ; special function registers
                                     34 ;--------------------------------------------------------
                                     35 ;--------------------------------------------------------
                                     36 ; ram data
                                     37 ;--------------------------------------------------------
                                     38 	.area _DATA
      000000                         39 _i::
      000000                         40 	.ds 1
      000001                         41 _j::
      000001                         42 	.ds 1
      000002                         43 _playerX::
      000002                         44 	.ds 1
      000003                         45 _playerY::
      000003                         46 	.ds 1
      000004                         47 _eX::
      000004                         48 	.ds 10
      00000E                         49 _eY::
      00000E                         50 	.ds 10
      000018                         51 _lastKeys::
      000018                         52 	.ds 1
      000019                         53 _randomBkgTiles::
      000019                         54 	.ds 20
                                     55 ;--------------------------------------------------------
                                     56 ; absolute external ram data
                                     57 ;--------------------------------------------------------
                                     58 	.area _DABS (ABS)
                                     59 ;--------------------------------------------------------
                                     60 ; global & static initialisations
                                     61 ;--------------------------------------------------------
                                     62 	.area _HOME
                                     63 	.area _GSINIT
                                     64 	.area _GSFINAL
                                     65 	.area _GSINIT
                                     66 ;--------------------------------------------------------
                                     67 ; Home
                                     68 ;--------------------------------------------------------
                                     69 	.area _HOME
                                     70 	.area _HOME
                                     71 ;--------------------------------------------------------
                                     72 ; code
                                     73 ;--------------------------------------------------------
                                     74 	.area _CODE
                                     75 ;..\src\main.c:43: void main(){
                                     76 ;	---------------------------------
                                     77 ; Function main
                                     78 ; ---------------------------------
      000000                         79 _main::
                                     80 ;..\src\main.c:45: initGame();																	// RAN ONCE AT STARTUP
      000000 CDr54r01                81 	call	_initGame
                                     82 ;..\src\main.c:49: while(1){
      000003                         83 00102$:
                                     84 ;..\src\main.c:51: updatePlayer();															// UPDATE PLAYER
      000003 CDr6Br02                85 	call	_updatePlayer
                                     86 ;..\src\main.c:53: HIDE_WIN;																// SHOW WINDOW LAYER
      000006 F0r00                   87 	ldh	a, (_LCDC_REG+0)
      000008 E6 DF                   88 	and	a, #0xdf
      00000A E0r00                   89 	ldh	(_LCDC_REG+0),a
                                     90 ;..\src\main.c:54: SHOW_SPRITES;															// HIDE SPRITES LAYER
      00000C F0r00                   91 	ldh	a, (_LCDC_REG+0)
      00000E F6 02                   92 	or	a, #0x02
      000010 E0r00                   93 	ldh	(_LCDC_REG+0),a
                                     94 ;..\src\main.c:55: SHOW_BKG;																// SHOW BACKGROUND LAYER
      000012 F0r00                   95 	ldh	a, (_LCDC_REG+0)
      000014 F6 01                   96 	or	a, #0x01
      000016 E0r00                   97 	ldh	(_LCDC_REG+0),a
                                     98 ;..\src\main.c:57: lastKeys = joypad();													// UPDATE OUR KEYPRESSES
      000018 CDr00r00                99 	call	_joypad
      00001B 21r18r00               100 	ld	hl, #_lastKeys
      00001E 73                     101 	ld	(hl), e
                                    102 ;..\src\main.c:58: wait_vbl_done();														// WAIT FOR VBLANK TO FINISH - ENSURES 60 FRAMES PER SECOND MAXIMUM
      00001F CDr00r00               103 	call	_wait_vbl_done
                                    104 ;..\src\main.c:63: }
      000022 18 DF                  105 	jr	00102$
      000024                        106 _sprites:
      000024 3C                     107 	.db #0x3c	; 60
      000025 3C                     108 	.db #0x3c	; 60
      000026 42                     109 	.db #0x42	; 66	'B'
      000027 42                     110 	.db #0x42	; 66	'B'
      000028 A9                     111 	.db #0xa9	; 169
      000029 A9                     112 	.db #0xa9	; 169
      00002A A9                     113 	.db #0xa9	; 169
      00002B A9                     114 	.db #0xa9	; 169
      00002C 81                     115 	.db #0x81	; 129
      00002D 81                     116 	.db #0x81	; 129
      00002E 91                     117 	.db #0x91	; 145
      00002F 91                     118 	.db #0x91	; 145
      000030 42                     119 	.db #0x42	; 66	'B'
      000031 42                     120 	.db #0x42	; 66	'B'
      000032 3C                     121 	.db #0x3c	; 60
      000033 3C                     122 	.db #0x3c	; 60
      000034 3C                     123 	.db #0x3c	; 60
      000035 3C                     124 	.db #0x3c	; 60
      000036 42                     125 	.db #0x42	; 66	'B'
      000037 42                     126 	.db #0x42	; 66	'B'
      000038 81                     127 	.db #0x81	; 129
      000039 81                     128 	.db #0x81	; 129
      00003A ED                     129 	.db #0xed	; 237
      00003B ED                     130 	.db #0xed	; 237
      00003C 81                     131 	.db #0x81	; 129
      00003D 81                     132 	.db #0x81	; 129
      00003E 91                     133 	.db #0x91	; 145
      00003F 91                     134 	.db #0x91	; 145
      000040 42                     135 	.db #0x42	; 66	'B'
      000041 42                     136 	.db #0x42	; 66	'B'
      000042 3C                     137 	.db #0x3c	; 60
      000043 3C                     138 	.db #0x3c	; 60
      000044 99                     139 	.db #0x99	; 153
      000045 81                     140 	.db #0x81	; 129
      000046 42                     141 	.db #0x42	; 66	'B'
      000047 5A                     142 	.db #0x5a	; 90	'Z'
      000048 24                     143 	.db #0x24	; 36
      000049 3C                     144 	.db #0x3c	; 60
      00004A 99                     145 	.db #0x99	; 153
      00004B 7E                     146 	.db #0x7e	; 126
      00004C 99                     147 	.db #0x99	; 153
      00004D 7E                     148 	.db #0x7e	; 126
      00004E 24                     149 	.db #0x24	; 36
      00004F 3C                     150 	.db #0x3c	; 60
      000050 42                     151 	.db #0x42	; 66	'B'
      000051 5A                     152 	.db #0x5a	; 90	'Z'
      000052 99                     153 	.db #0x99	; 153
      000053 81                     154 	.db #0x81	; 129
      000054 38                     155 	.db #0x38	; 56	'8'
      000055 04                     156 	.db #0x04	; 4
      000056 7C                     157 	.db #0x7c	; 124
      000057 02                     158 	.db #0x02	; 2
      000058 5C                     159 	.db #0x5c	; 92
      000059 22                     160 	.db #0x22	; 34
      00005A 5C                     161 	.db #0x5c	; 92
      00005B 22                     162 	.db #0x22	; 34
      00005C 5C                     163 	.db #0x5c	; 92
      00005D 22                     164 	.db #0x22	; 34
      00005E 5C                     165 	.db #0x5c	; 92
      00005F 22                     166 	.db #0x22	; 34
      000060 7C                     167 	.db #0x7c	; 124
      000061 02                     168 	.db #0x02	; 2
      000062 38                     169 	.db #0x38	; 56	'8'
      000063 04                     170 	.db #0x04	; 4
      000064 00                     171 	.db #0x00	; 0
      000065 00                     172 	.db #0x00	; 0
      000066 3E                     173 	.db #0x3e	; 62
      000067 3E                     174 	.db #0x3e	; 62
      000068 63                     175 	.db #0x63	; 99	'c'
      000069 63                     176 	.db #0x63	; 99	'c'
      00006A 63                     177 	.db #0x63	; 99	'c'
      00006B 63                     178 	.db #0x63	; 99	'c'
      00006C 63                     179 	.db #0x63	; 99	'c'
      00006D 63                     180 	.db #0x63	; 99	'c'
      00006E 63                     181 	.db #0x63	; 99	'c'
      00006F 63                     182 	.db #0x63	; 99	'c'
      000070 3E                     183 	.db #0x3e	; 62
      000071 3E                     184 	.db #0x3e	; 62
      000072 00                     185 	.db #0x00	; 0
      000073 00                     186 	.db #0x00	; 0
      000074 00                     187 	.db #0x00	; 0
      000075 00                     188 	.db #0x00	; 0
      000076 1C                     189 	.db #0x1c	; 28
      000077 1C                     190 	.db #0x1c	; 28
      000078 3C                     191 	.db #0x3c	; 60
      000079 3C                     192 	.db #0x3c	; 60
      00007A 6C                     193 	.db #0x6c	; 108	'l'
      00007B 6C                     194 	.db #0x6c	; 108	'l'
      00007C 0C                     195 	.db #0x0c	; 12
      00007D 0C                     196 	.db #0x0c	; 12
      00007E 0C                     197 	.db #0x0c	; 12
      00007F 0C                     198 	.db #0x0c	; 12
      000080 7F                     199 	.db #0x7f	; 127
      000081 7F                     200 	.db #0x7f	; 127
      000082 00                     201 	.db #0x00	; 0
      000083 00                     202 	.db #0x00	; 0
      000084 00                     203 	.db #0x00	; 0
      000085 00                     204 	.db #0x00	; 0
      000086 3E                     205 	.db #0x3e	; 62
      000087 3E                     206 	.db #0x3e	; 62
      000088 63                     207 	.db #0x63	; 99	'c'
      000089 63                     208 	.db #0x63	; 99	'c'
      00008A 03                     209 	.db #0x03	; 3
      00008B 03                     210 	.db #0x03	; 3
      00008C 1E                     211 	.db #0x1e	; 30
      00008D 1E                     212 	.db #0x1e	; 30
      00008E 70                     213 	.db #0x70	; 112	'p'
      00008F 70                     214 	.db #0x70	; 112	'p'
      000090 7F                     215 	.db #0x7f	; 127
      000091 7F                     216 	.db #0x7f	; 127
      000092 00                     217 	.db #0x00	; 0
      000093 00                     218 	.db #0x00	; 0
      000094 00                     219 	.db #0x00	; 0
      000095 00                     220 	.db #0x00	; 0
      000096 7F                     221 	.db #0x7f	; 127
      000097 7F                     222 	.db #0x7f	; 127
      000098 03                     223 	.db #0x03	; 3
      000099 03                     224 	.db #0x03	; 3
      00009A 3E                     225 	.db #0x3e	; 62
      00009B 3E                     226 	.db #0x3e	; 62
      00009C 07                     227 	.db #0x07	; 7
      00009D 07                     228 	.db #0x07	; 7
      00009E 43                     229 	.db #0x43	; 67	'C'
      00009F 43                     230 	.db #0x43	; 67	'C'
      0000A0 3E                     231 	.db #0x3e	; 62
      0000A1 3E                     232 	.db #0x3e	; 62
      0000A2 00                     233 	.db #0x00	; 0
      0000A3 00                     234 	.db #0x00	; 0
      0000A4 00                     235 	.db #0x00	; 0
      0000A5 00                     236 	.db #0x00	; 0
      0000A6 60                     237 	.db #0x60	; 96
      0000A7 60                     238 	.db #0x60	; 96
      0000A8 6C                     239 	.db #0x6c	; 108	'l'
      0000A9 6C                     240 	.db #0x6c	; 108	'l'
      0000AA 6C                     241 	.db #0x6c	; 108	'l'
      0000AB 6C                     242 	.db #0x6c	; 108	'l'
      0000AC 7F                     243 	.db #0x7f	; 127
      0000AD 7F                     244 	.db #0x7f	; 127
      0000AE 0C                     245 	.db #0x0c	; 12
      0000AF 0C                     246 	.db #0x0c	; 12
      0000B0 0C                     247 	.db #0x0c	; 12
      0000B1 0C                     248 	.db #0x0c	; 12
      0000B2 00                     249 	.db #0x00	; 0
      0000B3 00                     250 	.db #0x00	; 0
      0000B4 00                     251 	.db #0x00	; 0
      0000B5 00                     252 	.db #0x00	; 0
      0000B6 7F                     253 	.db #0x7f	; 127
      0000B7 7F                     254 	.db #0x7f	; 127
      0000B8 60                     255 	.db #0x60	; 96
      0000B9 60                     256 	.db #0x60	; 96
      0000BA 7E                     257 	.db #0x7e	; 126
      0000BB 7E                     258 	.db #0x7e	; 126
      0000BC 03                     259 	.db #0x03	; 3
      0000BD 03                     260 	.db #0x03	; 3
      0000BE 63                     261 	.db #0x63	; 99	'c'
      0000BF 63                     262 	.db #0x63	; 99	'c'
      0000C0 3E                     263 	.db #0x3e	; 62
      0000C1 3E                     264 	.db #0x3e	; 62
      0000C2 00                     265 	.db #0x00	; 0
      0000C3 00                     266 	.db #0x00	; 0
      0000C4 00                     267 	.db #0x00	; 0
      0000C5 00                     268 	.db #0x00	; 0
      0000C6 3F                     269 	.db #0x3f	; 63
      0000C7 3F                     270 	.db #0x3f	; 63
      0000C8 60                     271 	.db #0x60	; 96
      0000C9 60                     272 	.db #0x60	; 96
      0000CA 7E                     273 	.db #0x7e	; 126
      0000CB 7E                     274 	.db #0x7e	; 126
      0000CC 63                     275 	.db #0x63	; 99	'c'
      0000CD 63                     276 	.db #0x63	; 99	'c'
      0000CE 63                     277 	.db #0x63	; 99	'c'
      0000CF 63                     278 	.db #0x63	; 99	'c'
      0000D0 3E                     279 	.db #0x3e	; 62
      0000D1 3E                     280 	.db #0x3e	; 62
      0000D2 00                     281 	.db #0x00	; 0
      0000D3 00                     282 	.db #0x00	; 0
      0000D4 00                     283 	.db #0x00	; 0
      0000D5 00                     284 	.db #0x00	; 0
      0000D6 7F                     285 	.db #0x7f	; 127
      0000D7 7F                     286 	.db #0x7f	; 127
      0000D8 03                     287 	.db #0x03	; 3
      0000D9 03                     288 	.db #0x03	; 3
      0000DA 06                     289 	.db #0x06	; 6
      0000DB 06                     290 	.db #0x06	; 6
      0000DC 0C                     291 	.db #0x0c	; 12
      0000DD 0C                     292 	.db #0x0c	; 12
      0000DE 18                     293 	.db #0x18	; 24
      0000DF 18                     294 	.db #0x18	; 24
      0000E0 30                     295 	.db #0x30	; 48	'0'
      0000E1 30                     296 	.db #0x30	; 48	'0'
      0000E2 00                     297 	.db #0x00	; 0
      0000E3 00                     298 	.db #0x00	; 0
      0000E4 00                     299 	.db #0x00	; 0
      0000E5 00                     300 	.db #0x00	; 0
      0000E6 3E                     301 	.db #0x3e	; 62
      0000E7 3E                     302 	.db #0x3e	; 62
      0000E8 63                     303 	.db #0x63	; 99	'c'
      0000E9 63                     304 	.db #0x63	; 99	'c'
      0000EA 63                     305 	.db #0x63	; 99	'c'
      0000EB 63                     306 	.db #0x63	; 99	'c'
      0000EC 3E                     307 	.db #0x3e	; 62
      0000ED 3E                     308 	.db #0x3e	; 62
      0000EE 63                     309 	.db #0x63	; 99	'c'
      0000EF 63                     310 	.db #0x63	; 99	'c'
      0000F0 3E                     311 	.db #0x3e	; 62
      0000F1 3E                     312 	.db #0x3e	; 62
      0000F2 00                     313 	.db #0x00	; 0
      0000F3 00                     314 	.db #0x00	; 0
      0000F4 00                     315 	.db #0x00	; 0
      0000F5 00                     316 	.db #0x00	; 0
      0000F6 3E                     317 	.db #0x3e	; 62
      0000F7 3E                     318 	.db #0x3e	; 62
      0000F8 63                     319 	.db #0x63	; 99	'c'
      0000F9 63                     320 	.db #0x63	; 99	'c'
      0000FA 63                     321 	.db #0x63	; 99	'c'
      0000FB 63                     322 	.db #0x63	; 99	'c'
      0000FC 3F                     323 	.db #0x3f	; 63
      0000FD 3F                     324 	.db #0x3f	; 63
      0000FE 03                     325 	.db #0x03	; 3
      0000FF 03                     326 	.db #0x03	; 3
      000100 7E                     327 	.db #0x7e	; 126
      000101 7E                     328 	.db #0x7e	; 126
      000102 00                     329 	.db #0x00	; 0
      000103 00                     330 	.db #0x00	; 0
      000104                        331 _myBkgData:
      000104 00                     332 	.db #0x00	; 0
      000105 00                     333 	.db #0x00	; 0
      000106 00                     334 	.db #0x00	; 0
      000107 00                     335 	.db #0x00	; 0
      000108 00                     336 	.db #0x00	; 0
      000109 00                     337 	.db #0x00	; 0
      00010A 00                     338 	.db #0x00	; 0
      00010B 00                     339 	.db #0x00	; 0
      00010C 00                     340 	.db #0x00	; 0
      00010D 00                     341 	.db #0x00	; 0
      00010E 00                     342 	.db #0x00	; 0
      00010F 00                     343 	.db #0x00	; 0
      000110 00                     344 	.db #0x00	; 0
      000111 00                     345 	.db #0x00	; 0
      000112 00                     346 	.db #0x00	; 0
      000113 00                     347 	.db #0x00	; 0
      000114 00                     348 	.db #0x00	; 0
      000115 00                     349 	.db #0x00	; 0
      000116 08                     350 	.db #0x08	; 8
      000117 00                     351 	.db #0x00	; 0
      000118 08                     352 	.db #0x08	; 8
      000119 00                     353 	.db #0x00	; 0
      00011A 36                     354 	.db #0x36	; 54	'6'
      00011B 00                     355 	.db #0x00	; 0
      00011C 08                     356 	.db #0x08	; 8
      00011D 00                     357 	.db #0x00	; 0
      00011E 08                     358 	.db #0x08	; 8
      00011F 00                     359 	.db #0x00	; 0
      000120 00                     360 	.db #0x00	; 0
      000121 00                     361 	.db #0x00	; 0
      000122 00                     362 	.db #0x00	; 0
      000123 00                     363 	.db #0x00	; 0
      000124 00                     364 	.db #0x00	; 0
      000125 00                     365 	.db #0x00	; 0
      000126 00                     366 	.db #0x00	; 0
      000127 00                     367 	.db #0x00	; 0
      000128 20                     368 	.db #0x20	; 32
      000129 00                     369 	.db #0x00	; 0
      00012A 50                     370 	.db #0x50	; 80	'P'
      00012B 00                     371 	.db #0x00	; 0
      00012C 20                     372 	.db #0x20	; 32
      00012D 00                     373 	.db #0x00	; 0
      00012E 00                     374 	.db #0x00	; 0
      00012F 00                     375 	.db #0x00	; 0
      000130 00                     376 	.db #0x00	; 0
      000131 00                     377 	.db #0x00	; 0
      000132 00                     378 	.db #0x00	; 0
      000133 00                     379 	.db #0x00	; 0
      000134 00                     380 	.db #0x00	; 0
      000135 00                     381 	.db #0x00	; 0
      000136 00                     382 	.db #0x00	; 0
      000137 00                     383 	.db #0x00	; 0
      000138 00                     384 	.db #0x00	; 0
      000139 00                     385 	.db #0x00	; 0
      00013A 00                     386 	.db #0x00	; 0
      00013B 00                     387 	.db #0x00	; 0
      00013C 00                     388 	.db #0x00	; 0
      00013D 00                     389 	.db #0x00	; 0
      00013E 04                     390 	.db #0x04	; 4
      00013F 00                     391 	.db #0x00	; 0
      000140 0E                     392 	.db #0x0e	; 14
      000141 00                     393 	.db #0x00	; 0
      000142 04                     394 	.db #0x04	; 4
      000143 00                     395 	.db #0x00	; 0
      000144 00                     396 	.db #0x00	; 0
      000145 00                     397 	.db #0x00	; 0
      000146 00                     398 	.db #0x00	; 0
      000147 00                     399 	.db #0x00	; 0
      000148 00                     400 	.db #0x00	; 0
      000149 00                     401 	.db #0x00	; 0
      00014A 00                     402 	.db #0x00	; 0
      00014B 00                     403 	.db #0x00	; 0
      00014C 50                     404 	.db #0x50	; 80	'P'
      00014D 00                     405 	.db #0x00	; 0
      00014E 20                     406 	.db #0x20	; 32
      00014F 00                     407 	.db #0x00	; 0
      000150 50                     408 	.db #0x50	; 80	'P'
      000151 00                     409 	.db #0x00	; 0
      000152 00                     410 	.db #0x00	; 0
      000153 00                     411 	.db #0x00	; 0
                                    412 ;..\src\main.c:69: void initGame(){
                                    413 ;	---------------------------------
                                    414 ; Function initGame
                                    415 ; ---------------------------------
      000154                        416 _initGame::
                                    417 ;..\src\main.c:71: DISPLAY_ON;																	// TURNS ON THE GAMEBOY LCD
      000154 F0r00                  418 	ldh	a, (_LCDC_REG+0)
      000156 F6 80                  419 	or	a, #0x80
      000158 E0r00                  420 	ldh	(_LCDC_REG+0),a
                                    421 ;..\src\main.c:72: NR52_REG = 0x8F;															// TURN SOUND ON
      00015A 3E 8F                  422 	ld	a, #0x8f
      00015C E0r00                  423 	ldh	(_NR52_REG+0),a
                                    424 ;..\src\main.c:73: NR51_REG = 0x11;															// ENABLE SOUND CHANNELS
      00015E 3E 11                  425 	ld	a, #0x11
      000160 E0r00                  426 	ldh	(_NR51_REG+0),a
                                    427 ;..\src\main.c:74: NR50_REG = 0x1F;															// VOLUME MAX = 0x77, MIN = 0x00	
      000162 3E 1F                  428 	ld	a, #0x1f
      000164 E0r00                  429 	ldh	(_NR50_REG+0),a
                                    430 ;..\src\main.c:76: initrand(DIV_REG);															// SEED OUR RANDOMIZER
      000166 F0r00                  431 	ldh	a, (_DIV_REG+0)
      000168 4F                     432 	ld	c, a
      000169 06 00                  433 	ld	b, #0x00
      00016B C5                     434 	push	bc
      00016C CDr00r00               435 	call	_initrand
      00016F E8 02                  436 	add	sp, #2
                                    437 ;..\src\main.c:78: set_sprite_data(0, 14, sprites);											// STORE OUR SPRITE DATA AT THE START OF SPRITE VRAM
      000171 21r24r00               438 	ld	hl, #_sprites
      000174 E5                     439 	push	hl
      000175 3E 0E                  440 	ld	a, #0x0e
      000177 F5                     441 	push	af
      000178 33                     442 	inc	sp
      000179 AF                     443 	xor	a, a
      00017A F5                     444 	push	af
      00017B 33                     445 	inc	sp
      00017C CDr00r00               446 	call	_set_sprite_data
      00017F E8 04                  447 	add	sp, #4
                                    448 ;..\src\main.c:79: set_bkg_data(0, 4, myBkgData);												// STORE OUR BKG DATA AT THE START OF BKG VRAM - NOTE, THE WINDOW LAYER SHARED THE BKG VRAM BY DEFAULT
      000181 21r04r01               449 	ld	hl, #_myBkgData
      000184 E5                     450 	push	hl
      000185 3E 04                  451 	ld	a, #0x04
      000187 F5                     452 	push	af
      000188 33                     453 	inc	sp
      000189 AF                     454 	xor	a, a
      00018A F5                     455 	push	af
      00018B 33                     456 	inc	sp
      00018C CDr00r00               457 	call	_set_bkg_data
      00018F E8 04                  458 	add	sp, #4
                                    459 ;..\src\main.c:81: playerX = 64;																// PLAYERS INITAL X POSITION
      000191 21r02r00               460 	ld	hl, #_playerX
      000194 36 40                  461 	ld	(hl), #0x40
                                    462 ;..\src\main.c:82: playerY = 64;																// PLAYERS INITAL Y POSITION
      000196 21r03r00               463 	ld	hl, #_playerY
      000199 36 40                  464 	ld	(hl), #0x40
                                    465 ;C:/Users/carlo/Desktop/Periodo 7/IHS/Projeto Snake-Corona/tools/gbdk/include/gb/gb.h:999: shadow_OAM[nb].tile=tile;
      00019B 21r02r00               466 	ld	hl, #(_shadow_OAM + 0x0002)
      00019E 36 00                  467 	ld	(hl), #0x00
                                    468 ;..\src\main.c:86: for (i=0; i !=10; i++){													// OUR ENEMY POSITION LOOP - NOTE, USE !=, NOT < TO SCRAPE BACK SOME CPU TIME
      0001A0 21r00r00               469 	ld	hl, #_i
      0001A3 36 00                  470 	ld	(hl), #0x00
      0001A5                        471 00107$:
                                    472 ;..\src\main.c:88: eX[i] = 16+(rand() >> 1);												// RANDOM X POSITION 16 - 144
      0001A5 3Er04                  473 	ld	a, #<(_eX)
      0001A7 21r00r00               474 	ld	hl, #_i
      0001AA 86                     475 	add	a, (hl)
      0001AB 4F                     476 	ld	c, a
      0001AC 3Es00                  477 	ld	a, #>(_eX)
      0001AE CE 00                  478 	adc	a, #0x00
      0001B0 47                     479 	ld	b, a
      0001B1 C5                     480 	push	bc
      0001B2 CDr00r00               481 	call	_rand
      0001B5 7B                     482 	ld	a, e
      0001B6 C1                     483 	pop	bc
      0001B7 CB 2F                  484 	sra	a
      0001B9 C6 10                  485 	add	a, #0x10
      0001BB 02                     486 	ld	(bc), a
                                    487 ;..\src\main.c:89: eY[i] = 16+(rand() >> 1);												// RANDOM Y POSITION 16 - 144
      0001BC 3Er0E                  488 	ld	a, #<(_eY)
      0001BE 21r00r00               489 	ld	hl, #_i
      0001C1 86                     490 	add	a, (hl)
      0001C2 4F                     491 	ld	c, a
      0001C3 3Es00                  492 	ld	a, #>(_eY)
      0001C5 CE 00                  493 	adc	a, #0x00
      0001C7 47                     494 	ld	b, a
      0001C8 C5                     495 	push	bc
      0001C9 CDr00r00               496 	call	_rand
      0001CC 7B                     497 	ld	a, e
      0001CD C1                     498 	pop	bc
      0001CE CB 2F                  499 	sra	a
      0001D0 C6 10                  500 	add	a, #0x10
      0001D2 02                     501 	ld	(bc), a
                                    502 ;..\src\main.c:90: set_sprite_tile(i+1, 2);												// ENEMIES SRITE TILE - SET TO SPRITE 2
      0001D3 21r00r00               503 	ld	hl, #_i
      0001D6 5E                     504 	ld	e, (hl)
      0001D7 1C                     505 	inc	e
                                    506 ;C:/Users/carlo/Desktop/Periodo 7/IHS/Projeto Snake-Corona/tools/gbdk/include/gb/gb.h:999: shadow_OAM[nb].tile=tile;
      0001D8 01r00r00               507 	ld	bc, #_shadow_OAM+0
      0001DB AF                     508 	xor	a, a
      0001DC 6B                     509 	ld	l, e
      0001DD 67                     510 	ld	h, a
      0001DE 29                     511 	add	hl, hl
      0001DF 29                     512 	add	hl, hl
      0001E0 09                     513 	add	hl, bc
      0001E1 23                     514 	inc	hl
      0001E2 23                     515 	inc	hl
      0001E3 36 02                  516 	ld	(hl), #0x02
                                    517 ;..\src\main.c:91: move_sprite(i+1,eX[i], eY[i]);											// POSITION ENEMIES	
      0001E5 3Er0E                  518 	ld	a, #<(_eY)
      0001E7 21r00r00               519 	ld	hl, #_i
      0001EA 86                     520 	add	a, (hl)
      0001EB 4F                     521 	ld	c, a
      0001EC 3Es00                  522 	ld	a, #>(_eY)
      0001EE CE 00                  523 	adc	a, #0x00
      0001F0 47                     524 	ld	b, a
      0001F1 0A                     525 	ld	a, (bc)
      0001F2 47                     526 	ld	b, a
      0001F3 3Er04                  527 	ld	a, #<(_eX)
      0001F5 86                     528 	add	a, (hl)
      0001F6 5F                     529 	ld	e, a
      0001F7 3Es00                  530 	ld	a, #>(_eX)
      0001F9 CE 00                  531 	adc	a, #0x00
      0001FB 57                     532 	ld	d, a
      0001FC 1A                     533 	ld	a, (de)
      0001FD 4F                     534 	ld	c, a
      0001FE 5E                     535 	ld	e, (hl)
      0001FF 1C                     536 	inc	e
                                    537 ;C:/Users/carlo/Desktop/Periodo 7/IHS/Projeto Snake-Corona/tools/gbdk/include/gb/gb.h:1072: OAM_item_t * itm = &shadow_OAM[nb];
      000200 16 00                  538 	ld	d, #0x00
      000202 6B                     539 	ld	l, e
      000203 62                     540 	ld	h, d
      000204 29                     541 	add	hl, hl
      000205 29                     542 	add	hl, hl
      000206 11r00r00               543 	ld	de, #_shadow_OAM
      000209 19                     544 	add	hl, de
                                    545 ;C:/Users/carlo/Desktop/Periodo 7/IHS/Projeto Snake-Corona/tools/gbdk/include/gb/gb.h:1073: itm->y=y, itm->x=x;
      00020A 78                     546 	ld	a, b
      00020B 22                     547 	ld	(hl+), a
      00020C 71                     548 	ld	(hl), c
                                    549 ;..\src\main.c:86: for (i=0; i !=10; i++){													// OUR ENEMY POSITION LOOP - NOTE, USE !=, NOT < TO SCRAPE BACK SOME CPU TIME
      00020D 21r00r00               550 	ld	hl, #_i
      000210 34                     551 	inc	(hl)
      000211 7E                     552 	ld	a, (hl)
      000212 D6 0A                  553 	sub	a, #0x0a
      000214 20 8F                  554 	jr	NZ, 00107$
                                    555 ;..\src\main.c:98: for (j=0; j != 18; j++){
      000216 21r01r00               556 	ld	hl, #_j
      000219 36 00                  557 	ld	(hl), #0x00
      00021B                        558 00111$:
                                    559 ;..\src\main.c:100: for (i=0; i != 20; i++){		
      00021B 21r00r00               560 	ld	hl, #_i
      00021E 36 00                  561 	ld	(hl), #0x00
      000220                        562 00109$:
                                    563 ;..\src\main.c:101: randomBkgTiles[i] = rand() % 4;		
      000220 3Er19                  564 	ld	a, #<(_randomBkgTiles)
      000222 21r00r00               565 	ld	hl, #_i
      000225 86                     566 	add	a, (hl)
      000226 4F                     567 	ld	c, a
      000227 3Es00                  568 	ld	a, #>(_randomBkgTiles)
      000229 CE 00                  569 	adc	a, #0x00
      00022B 47                     570 	ld	b, a
      00022C C5                     571 	push	bc
      00022D CDr00r00               572 	call	_rand
      000230 C1                     573 	pop	bc
      000231 7B                     574 	ld	a, e
      000232 17                     575 	rla
      000233 9F                     576 	sbc	a, a
      000234 57                     577 	ld	d, a
      000235 C5                     578 	push	bc
      000236 21 04 00               579 	ld	hl, #0x0004
      000239 E5                     580 	push	hl
      00023A D5                     581 	push	de
      00023B CDr00r00               582 	call	__modsint
      00023E E8 04                  583 	add	sp, #4
      000240 C1                     584 	pop	bc
      000241 7B                     585 	ld	a, e
      000242 02                     586 	ld	(bc), a
                                    587 ;..\src\main.c:100: for (i=0; i != 20; i++){		
      000243 21r00r00               588 	ld	hl, #_i
      000246 34                     589 	inc	(hl)
      000247 7E                     590 	ld	a, (hl)
      000248 D6 14                  591 	sub	a, #0x14
      00024A 20 D4                  592 	jr	NZ, 00109$
                                    593 ;..\src\main.c:104: set_bkg_tiles(0,j,20,1,randomBkgTiles);									// SET A LINE OF BKG DATA (X, Y, W, H, DATA)
      00024C 21r19r00               594 	ld	hl, #_randomBkgTiles
      00024F E5                     595 	push	hl
      000250 11 14 01               596 	ld	de, #0x0114
      000253 D5                     597 	push	de
      000254 FAr01r00               598 	ld	a, (#_j)
      000257 F5                     599 	push	af
      000258 33                     600 	inc	sp
      000259 AF                     601 	xor	a, a
      00025A F5                     602 	push	af
      00025B 33                     603 	inc	sp
      00025C CDr00r00               604 	call	_set_bkg_tiles
      00025F E8 06                  605 	add	sp, #6
                                    606 ;..\src\main.c:98: for (j=0; j != 18; j++){
      000261 21r01r00               607 	ld	hl, #_j
      000264 34                     608 	inc	(hl)
      000265 7E                     609 	ld	a, (hl)
      000266 D6 12                  610 	sub	a, #0x12
      000268 20 B1                  611 	jr	NZ, 00111$
                                    612 ;..\src\main.c:107: }
      00026A C9                     613 	ret
                                    614 ;..\src\main.c:112: void updatePlayer(){
                                    615 ;	---------------------------------
                                    616 ; Function updatePlayer
                                    617 ; ---------------------------------
      00026B                        618 _updatePlayer::
                                    619 ;..\src\main.c:117: if (joypad() & J_UP){
      00026B CDr00r00               620 	call	_joypad
      00026E CB 53                  621 	bit	2, e
      000270 28 0E                  622 	jr	Z, 00104$
                                    623 ;..\src\main.c:118: playerY--;
      000272 21r03r00               624 	ld	hl, #_playerY
      000275 35                     625 	dec	(hl)
                                    626 ;..\src\main.c:119: if (playerY == 15){
      000276 7E                     627 	ld	a, (hl)
      000277 D6 0F                  628 	sub	a, #0x0f
      000279 20 05                  629 	jr	NZ, 00104$
                                    630 ;..\src\main.c:120: playerY = 16;
      00027B 21r03r00               631 	ld	hl, #_playerY
      00027E 36 10                  632 	ld	(hl), #0x10
      000280                        633 00104$:
                                    634 ;..\src\main.c:125: if (joypad() & J_DOWN){
      000280 CDr00r00               635 	call	_joypad
      000283 CB 5B                  636 	bit	3, e
      000285 28 0E                  637 	jr	Z, 00108$
                                    638 ;..\src\main.c:126: playerY++;
      000287 21r03r00               639 	ld	hl, #_playerY
      00028A 34                     640 	inc	(hl)
                                    641 ;..\src\main.c:127: if (playerY == 153){
      00028B 7E                     642 	ld	a, (hl)
      00028C D6 99                  643 	sub	a, #0x99
      00028E 20 05                  644 	jr	NZ, 00108$
                                    645 ;..\src\main.c:128: playerY = 152;
      000290 21r03r00               646 	ld	hl, #_playerY
      000293 36 98                  647 	ld	(hl), #0x98
      000295                        648 00108$:
                                    649 ;..\src\main.c:133: if (joypad() & J_LEFT){
      000295 CDr00r00               650 	call	_joypad
      000298 CB 4B                  651 	bit	1, e
      00029A 28 0E                  652 	jr	Z, 00112$
                                    653 ;..\src\main.c:134: playerX--;
      00029C 21r02r00               654 	ld	hl, #_playerX
      00029F 35                     655 	dec	(hl)
                                    656 ;..\src\main.c:135: if (playerX == 7){
      0002A0 7E                     657 	ld	a, (hl)
      0002A1 D6 07                  658 	sub	a, #0x07
      0002A3 20 05                  659 	jr	NZ, 00112$
                                    660 ;..\src\main.c:136: playerX = 8;
      0002A5 21r02r00               661 	ld	hl, #_playerX
      0002A8 36 08                  662 	ld	(hl), #0x08
      0002AA                        663 00112$:
                                    664 ;..\src\main.c:141: if (joypad() & J_RIGHT){
      0002AA CDr00r00               665 	call	_joypad
      0002AD 7B                     666 	ld	a, e
      0002AE 0F                     667 	rrca
      0002AF 30 0E                  668 	jr	NC, 00116$
                                    669 ;..\src\main.c:142: playerX++;
      0002B1 21r02r00               670 	ld	hl, #_playerX
      0002B4 34                     671 	inc	(hl)
                                    672 ;..\src\main.c:143: if (playerX == 161){
      0002B5 7E                     673 	ld	a, (hl)
      0002B6 D6 A1                  674 	sub	a, #0xa1
      0002B8 20 05                  675 	jr	NZ, 00116$
                                    676 ;..\src\main.c:144: playerX = 160;
      0002BA 21r02r00               677 	ld	hl, #_playerX
      0002BD 36 A0                  678 	ld	(hl), #0xa0
      0002BF                        679 00116$:
                                    680 ;..\src\main.c:152: if (joypad() & J_A){
      0002BF CDr00r00               681 	call	_joypad
      0002C2 CB 63                  682 	bit	4, e
      0002C4 28 16                  683 	jr	Z, 00118$
                                    684 ;..\src\main.c:154: NR11_REG = 0x7f; 													// SQUARE WAVE DUTY
      0002C6 3E 7F                  685 	ld	a, #0x7f
      0002C8 E0r00                  686 	ldh	(_NR11_REG+0),a
                                    687 ;..\src\main.c:155: NR12_REG = 0x7f; 													// VOLUME 0 = quietest, 255 = loudest
      0002CA 3E 7F                  688 	ld	a, #0x7f
      0002CC E0r00                  689 	ldh	(_NR12_REG+0),a
                                    690 ;..\src\main.c:156: NR13_REG = DIV_REG;													// LOWER BITS OF SOUND FREQ
      0002CE F0r00                  691 	ldh	a, (_DIV_REG+0)
      0002D0 E0r00                  692 	ldh	(_NR13_REG+0),a
                                    693 ;..\src\main.c:157: NR14_REG = 0x80 + (DIV_REG % 8); 									// LARGER SOUND FREQ - MINIMUM OF 128 - TOP 3 BYTES - ANY LESS = SOUND CHANNEL SWITCHES OFF
      0002D2 F0r00                  694 	ldh	a, (_DIV_REG+0)
      0002D4 E6 07                  695 	and	a, #0x07
      0002D6 C6 80                  696 	add	a, #0x80
      0002D8 E0r00                  697 	ldh	(_NR14_REG+0),a
      0002DA 18 10                  698 	jr	00119$
      0002DC                        699 00118$:
                                    700 ;..\src\main.c:159: NR11_REG = 0x00;													// NO A BUTTON - NO SOUND
      0002DC 3E 00                  701 	ld	a, #0x00
      0002DE E0r00                  702 	ldh	(_NR11_REG+0),a
                                    703 ;..\src\main.c:160: NR12_REG = 0x00;
      0002E0 3E 00                  704 	ld	a, #0x00
      0002E2 E0r00                  705 	ldh	(_NR12_REG+0),a
                                    706 ;..\src\main.c:161: NR13_REG = 0x00;
      0002E4 3E 00                  707 	ld	a, #0x00
      0002E6 E0r00                  708 	ldh	(_NR13_REG+0),a
                                    709 ;..\src\main.c:162: NR14_REG = 0x00;
      0002E8 3E 00                  710 	ld	a, #0x00
      0002EA E0r00                  711 	ldh	(_NR14_REG+0),a
      0002EC                        712 00119$:
                                    713 ;..\src\main.c:167: move_sprite(0,playerX,playerY);												// POSITION OUR SPRITE ON THE SCREEN	
      0002EC 21r03r00               714 	ld	hl, #_playerY
      0002EF 46                     715 	ld	b, (hl)
      0002F0 21r02r00               716 	ld	hl, #_playerX
      0002F3 4E                     717 	ld	c, (hl)
                                    718 ;C:/Users/carlo/Desktop/Periodo 7/IHS/Projeto Snake-Corona/tools/gbdk/include/gb/gb.h:1072: OAM_item_t * itm = &shadow_OAM[nb];
      0002F4 21r00r00               719 	ld	hl, #_shadow_OAM
                                    720 ;C:/Users/carlo/Desktop/Periodo 7/IHS/Projeto Snake-Corona/tools/gbdk/include/gb/gb.h:1073: itm->y=y, itm->x=x;
      0002F7 78                     721 	ld	a, b
      0002F8 22                     722 	ld	(hl+), a
      0002F9 71                     723 	ld	(hl), c
                                    724 ;..\src\main.c:169: j=0;																		// RE-USE J AS A FLAG TO SEE IF WE HAVE COLLIDED WITH AN ENEMY
      0002FA 21r01r00               725 	ld	hl, #_j
      0002FD 36 00                  726 	ld	(hl), #0x00
                                    727 ;..\src\main.c:171: for (i=0; i != 10; i++){												// LOOP THROUGH OUR 10 ENEMIES
      0002FF 21r00r00               728 	ld	hl, #_i
      000302 36 00                  729 	ld	(hl), #0x00
      000304                        730 00129$:
                                    731 ;..\src\main.c:173: if (collisionCheck(playerX, playerY, 8, 8, eX[i], eY[i], 8, 8) == 1){
      000304 3Er0E                  732 	ld	a, #<(_eY)
      000306 21r00r00               733 	ld	hl, #_i
      000309 86                     734 	add	a, (hl)
      00030A 4F                     735 	ld	c, a
      00030B 3Es00                  736 	ld	a, #>(_eY)
      00030D CE 00                  737 	adc	a, #0x00
      00030F 47                     738 	ld	b, a
      000310 0A                     739 	ld	a, (bc)
      000311 47                     740 	ld	b, a
      000312 3Er04                  741 	ld	a, #<(_eX)
      000314 86                     742 	add	a, (hl)
      000315 5F                     743 	ld	e, a
      000316 3Es00                  744 	ld	a, #>(_eX)
      000318 CE 00                  745 	adc	a, #0x00
      00031A 57                     746 	ld	d, a
      00031B 1A                     747 	ld	a, (de)
      00031C 26 08                  748 	ld	h, #0x08
      00031E E5                     749 	push	hl
      00031F 33                     750 	inc	sp
      000320 26 08                  751 	ld	h, #0x08
      000322 68                     752 	ld	l, b
      000323 E5                     753 	push	hl
      000324 57                     754 	ld	d,a
      000325 1E 08                  755 	ld	e,#0x08
      000327 D5                     756 	push	de
      000328 3E 08                  757 	ld	a, #0x08
      00032A F5                     758 	push	af
      00032B 33                     759 	inc	sp
      00032C FAr03r00               760 	ld	a, (#_playerY)
      00032F F5                     761 	push	af
      000330 33                     762 	inc	sp
      000331 FAr02r00               763 	ld	a, (#_playerX)
      000334 F5                     764 	push	af
      000335 33                     765 	inc	sp
      000336 CDr5Er03               766 	call	_collisionCheck
      000339 E8 08                  767 	add	sp, #8
      00033B 1D                     768 	dec	e
      00033C 20 05                  769 	jr	NZ, 00130$
                                    770 ;..\src\main.c:174: j= 1;																// IF WE COLLIDED, SET OUR FLAG VARIABLE, J TO 1
      00033E 21r01r00               771 	ld	hl, #_j
      000341 36 01                  772 	ld	(hl), #0x01
      000343                        773 00130$:
                                    774 ;..\src\main.c:171: for (i=0; i != 10; i++){												// LOOP THROUGH OUR 10 ENEMIES
      000343 21r00r00               775 	ld	hl, #_i
      000346 34                     776 	inc	(hl)
      000347 7E                     777 	ld	a, (hl)
      000348 D6 0A                  778 	sub	a, #0x0a
      00034A 20 B8                  779 	jr	NZ, 00129$
                                    780 ;..\src\main.c:180: switch (j){
      00034C FAr01r00               781 	ld	a, (#_j)
      00034F B7                     782 	or	a, a
      000350 20 06                  783 	jr	NZ, 00124$
                                    784 ;C:/Users/carlo/Desktop/Periodo 7/IHS/Projeto Snake-Corona/tools/gbdk/include/gb/gb.h:999: shadow_OAM[nb].tile=tile;
      000352 21r02r00               785 	ld	hl, #(_shadow_OAM + 0x0002)
      000355 36 00                  786 	ld	(hl), #0x00
                                    787 ;..\src\main.c:184: break;
      000357 C9                     788 	ret
                                    789 ;..\src\main.c:187: default:
      000358                        790 00124$:
                                    791 ;C:/Users/carlo/Desktop/Periodo 7/IHS/Projeto Snake-Corona/tools/gbdk/include/gb/gb.h:999: shadow_OAM[nb].tile=tile;
      000358 21r02r00               792 	ld	hl, #(_shadow_OAM + 0x0002)
      00035B 36 01                  793 	ld	(hl), #0x01
                                    794 ;..\src\main.c:190: }
                                    795 ;..\src\main.c:192: }
      00035D C9                     796 	ret
                                    797 ;..\src\main.c:198: UINT8 collisionCheck(UINT8 x1, UINT8 y1, UINT8 w1, UINT8 h1, UINT8 x2, UINT8 y2, UINT8 w2, UINT8 h2){
                                    798 ;	---------------------------------
                                    799 ; Function collisionCheck
                                    800 ; ---------------------------------
      00035E                        801 _collisionCheck::
      00035E E8 FC                  802 	add	sp, #-4
                                    803 ;..\src\main.c:200: if ((x1 < (x2+w2)) && ((x1+w1) > x2) && (y1 < (h2+y2)) && ((y1+h1) > y2)){
      000360 F8 0A                  804 	ldhl	sp,	#10
      000362 7E                     805 	ld	a, (hl)
      000363 F8 00                  806 	ldhl	sp,	#0
      000365 77                     807 	ld	(hl), a
      000366 AF                     808 	xor	a, a
      000367 23                     809 	inc	hl
      000368 77                     810 	ld	(hl), a
      000369 F8 0C                  811 	ldhl	sp,	#12
      00036B 4E                     812 	ld	c, (hl)
      00036C 06 00                  813 	ld	b, #0x00
      00036E E1                     814 	pop	hl
      00036F E5                     815 	push	hl
      000370 09                     816 	add	hl, bc
      000371 E5                     817 	push	hl
      000372 7D                     818 	ld	a, l
      000373 F8 04                  819 	ldhl	sp,	#4
      000375 77                     820 	ld	(hl), a
      000376 E1                     821 	pop	hl
      000377 7C                     822 	ld	a, h
      000378 F8 03                  823 	ldhl	sp,	#3
      00037A 77                     824 	ld	(hl), a
      00037B F8 06                  825 	ldhl	sp,	#6
      00037D 4E                     826 	ld	c, (hl)
      00037E 06 00                  827 	ld	b, #0x00
      000380 F8 02                  828 	ldhl	sp,	#2
      000382 79                     829 	ld	a, c
      000383 96                     830 	sub	a, (hl)
      000384 23                     831 	inc	hl
      000385 78                     832 	ld	a, b
      000386 9E                     833 	sbc	a, (hl)
      000387 78                     834 	ld	a, b
      000388 57                     835 	ld	d, a
      000389 CB 7E                  836 	bit	7, (hl)
      00038B 28 07                  837 	jr	Z, 00129$
      00038D CB 7A                  838 	bit	7, d
      00038F 20 08                  839 	jr	NZ, 00130$
      000391 BF                     840 	cp	a, a
      000392 18 05                  841 	jr	00130$
      000394                        842 00129$:
      000394 CB 7A                  843 	bit	7, d
      000396 28 01                  844 	jr	Z, 00130$
      000398 37                     845 	scf
      000399                        846 00130$:
      000399 D2r27r04               847 	jp	NC, 00102$
      00039C F8 08                  848 	ldhl	sp,	#8
      00039E 5E                     849 	ld	e, (hl)
      00039F 16 00                  850 	ld	d, #0x00
      0003A1 7B                     851 	ld	a, e
      0003A2 81                     852 	add	a, c
      0003A3 4F                     853 	ld	c, a
      0003A4 7A                     854 	ld	a, d
      0003A5 88                     855 	adc	a, b
      0003A6 47                     856 	ld	b, a
      0003A7 F8 00                  857 	ldhl	sp,	#0
      0003A9 7E                     858 	ld	a, (hl)
      0003AA 91                     859 	sub	a, c
      0003AB 23                     860 	inc	hl
      0003AC 7E                     861 	ld	a, (hl)
      0003AD 98                     862 	sbc	a, b
      0003AE 56                     863 	ld	d, (hl)
      0003AF 78                     864 	ld	a, b
      0003B0 CB 7F                  865 	bit	7,a
      0003B2 28 07                  866 	jr	Z, 00131$
      0003B4 CB 7A                  867 	bit	7, d
      0003B6 20 08                  868 	jr	NZ, 00132$
      0003B8 BF                     869 	cp	a, a
      0003B9 18 05                  870 	jr	00132$
      0003BB                        871 00131$:
      0003BB CB 7A                  872 	bit	7, d
      0003BD 28 01                  873 	jr	Z, 00132$
      0003BF 37                     874 	scf
      0003C0                        875 00132$:
      0003C0 30 65                  876 	jr	NC, 00102$
      0003C2 F8 0D                  877 	ldhl	sp,	#13
      0003C4 4E                     878 	ld	c, (hl)
      0003C5 06 00                  879 	ld	b, #0x00
      0003C7 2B                     880 	dec	hl
      0003C8 2B                     881 	dec	hl
      0003C9 7E                     882 	ld	a, (hl)
      0003CA F8 00                  883 	ldhl	sp,	#0
      0003CC 77                     884 	ld	(hl), a
      0003CD AF                     885 	xor	a, a
      0003CE 23                     886 	inc	hl
      0003CF 77                     887 	ld	(hl), a
      0003D0 E1                     888 	pop	hl
      0003D1 E5                     889 	push	hl
      0003D2 09                     890 	add	hl, bc
      0003D3 E5                     891 	push	hl
      0003D4 7D                     892 	ld	a, l
      0003D5 F8 04                  893 	ldhl	sp,	#4
      0003D7 77                     894 	ld	(hl), a
      0003D8 E1                     895 	pop	hl
      0003D9 7C                     896 	ld	a, h
      0003DA F8 03                  897 	ldhl	sp,	#3
      0003DC 77                     898 	ld	(hl), a
      0003DD F8 07                  899 	ldhl	sp,	#7
      0003DF 4E                     900 	ld	c, (hl)
      0003E0 06 00                  901 	ld	b, #0x00
      0003E2 F8 02                  902 	ldhl	sp,	#2
      0003E4 79                     903 	ld	a, c
      0003E5 96                     904 	sub	a, (hl)
      0003E6 23                     905 	inc	hl
      0003E7 78                     906 	ld	a, b
      0003E8 9E                     907 	sbc	a, (hl)
      0003E9 78                     908 	ld	a, b
      0003EA 57                     909 	ld	d, a
      0003EB CB 7E                  910 	bit	7, (hl)
      0003ED 28 07                  911 	jr	Z, 00133$
      0003EF CB 7A                  912 	bit	7, d
      0003F1 20 08                  913 	jr	NZ, 00134$
      0003F3 BF                     914 	cp	a, a
      0003F4 18 05                  915 	jr	00134$
      0003F6                        916 00133$:
      0003F6 CB 7A                  917 	bit	7, d
      0003F8 28 01                  918 	jr	Z, 00134$
      0003FA 37                     919 	scf
      0003FB                        920 00134$:
      0003FB 30 2A                  921 	jr	NC, 00102$
      0003FD F8 09                  922 	ldhl	sp,	#9
      0003FF 5E                     923 	ld	e, (hl)
      000400 16 00                  924 	ld	d, #0x00
      000402 7B                     925 	ld	a, e
      000403 81                     926 	add	a, c
      000404 4F                     927 	ld	c, a
      000405 7A                     928 	ld	a, d
      000406 88                     929 	adc	a, b
      000407 47                     930 	ld	b, a
      000408 F8 00                  931 	ldhl	sp,	#0
      00040A 7E                     932 	ld	a, (hl)
      00040B 91                     933 	sub	a, c
      00040C 23                     934 	inc	hl
      00040D 7E                     935 	ld	a, (hl)
      00040E 98                     936 	sbc	a, b
      00040F 56                     937 	ld	d, (hl)
      000410 78                     938 	ld	a, b
      000411 CB 7F                  939 	bit	7,a
      000413 28 07                  940 	jr	Z, 00135$
      000415 CB 7A                  941 	bit	7, d
      000417 20 08                  942 	jr	NZ, 00136$
      000419 BF                     943 	cp	a, a
      00041A 18 05                  944 	jr	00136$
      00041C                        945 00135$:
      00041C CB 7A                  946 	bit	7, d
      00041E 28 01                  947 	jr	Z, 00136$
      000420 37                     948 	scf
      000421                        949 00136$:
      000421 30 04                  950 	jr	NC, 00102$
                                    951 ;..\src\main.c:201: return 1;
      000423 1E 01                  952 	ld	e, #0x01
      000425 18 02                  953 	jr	00107$
      000427                        954 00102$:
                                    955 ;..\src\main.c:203: return 0;
      000427 1E 00                  956 	ld	e, #0x00
      000429                        957 00107$:
                                    958 ;..\src\main.c:206: }
      000429 E8 04                  959 	add	sp, #4
      00042B C9                     960 	ret
                                    961 	.area _CODE
                                    962 	.area _CABS (ABS)
